{"version":3,"sources":["utils.js","components/PinWrap.js","components/airequest/RequestMenu.js","../node_modules/@oraichain/cosmosjs/dist sync","components/contract/Query.js","components/contract/Execute.js","components/contract/Deploy.js","components/airequest/SetRequest.js","components/airequest/GetRequest.js","actions.js","reducers.js","configureStore.js","i18n/index.js","components/common.js","components/SignIn.js","components/Send.js","components/Import.js","components/ImportPrivateKey.js","components/Session.js","components/Home.js","components/Transaction.js","constants.js","components/provider/ProviderMenu.js","components/provider/SetScript.js","components/provider/EditScript.js","config.js","App.js","index.js","reportWebVitals.js","components/contract/ContractMenu.js"],"names":["countWords","str","trim","split","length","cleanMnemonics","mnemonics","join","replace","isMnemonicsValid","disablechecksum","validFlag","window","cosmos","getAddress","e","getFileSize","size","fileSize","toString","Math","round","toFixed","customStyles","option","provided","state","backgroundColor","isSelected","color","control","dropdownIndicator","menu","border","singleValue","opacity","isDisabled","transition","getPassword","jQuery","val","localStorage","getItem","getChildkeyFromDecrypted","decrypted","bech32MainPrefix","getChildKey","bech32","decode","words","prefix","buffer","Buffer","from","fromWords","bip32","Array","openPinWrap","$","password","alert","location","href","html","addClass","connect","actions","pinType","updateUser","onChildKey","history","useHistory","useTranslation","i18n","t","input","correct","showCorrectPinAnimation","showWrongPinAnimation","css","useEffect","attr","hidePin","i","substr","text","removeClass","numberClick","number","target","inputStr","innerText","dots","prototype","slice","call","document","querySelectorAll","className","indexOf","account","childKey","name","address","encrypted","CryptoJS","AES","encrypt","setTimeout","hide","show","encryptedMnemonics","decryptedMnemonics","decrypt","enc","Utf8","console","log","stdSignMsgByPayload","push","language","empty","submit","then","res","catch","err","error","message","ShuffledNumCode","numSlice","_","shuffle","shuffledNumCode","key","onClick","ShuffledAlphabetCode","alphabetSlice","shuffledAlphabetCode","type","id","ContractMenu","selected","path","label","map","item","to","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","Query","useState","inputContract","inputContractChange","formData","setFormData","schema","setSchema","blocking","setBlocking","queryContract","a","JSON","stringify","fetch","url","data","onSchemaFileChange","file","files","blob","Blob","arrayBuffer","fileBuffer","schemaBody","parse","tag","onChange","preventDefault","theme","height","defaultLanguage","value","Cosmos","user","getHandleMessage","contract","msg","msgSend","cosmwasm","wasm","v1beta1","MsgExecuteContract","sender","msgSendAny","google","protobuf","Any","type_url","encode","finish","tx","TxBody","messages","txBody","tx_response","raw_log","updateContractAddress","wasmBody","setWasmBody","handler","processFile","on","off","getStoreMessage","wasm_byte_code","MsgStoreCode","getInstantiateMessage","code_id","init_msg","MsgInstantiateContract","txBody1","res1","codeId","logs","events","attributes","find","txBody2","res2","contractAddress","byteLength","style","display","tabIndex","spellCheck","defaultValue","autoComplete","minWidth","readOnly","updateRequestId","inputFile","setInputFile","outputFile","setOutputFile","showInput","setShowInput","showOutput","setShowOutput","pattern","RegExp","clearFile","onFileChange","onType","output","handleSet","oscriptName","json","undefined","description","valCount","memo","test","Number","isInteger","parseInt","getTxBody","accAddress","toWords","identifier","requestFees","expectedOutput","reqId","KSUID","randomSync","string","oraichain","orai","airequest","MsgSetAIRequest","request_id","oracle_script_name","creator","validator_count","Long","fees","expected_output","requestId","onInput","request","handleGet","results","result","atob","payload","userReducer","action","contractReducer","requestReducer","createRootReducer","combineReducers","router","connectRouter","createBrowserHistory","reducer","configureStore","prevState","defaultStateString","ex","store","createStore","compose","applyMiddleware","routerMiddleware","subscribe","currentState","getState","setItem","use","LanguageDetector","init","resources","en","wallet","vn","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","formatSeparator","react","wait","hasClass","classReg","toggleClass","elem","c","documentElement","classList","contains","add","remove","classie","has","toggle","onInputFocus","ev","parentNode","onInputBlur","InputWrap","children","node","useRef","current","forEach","inputEl","addEventListener","ref","SignIn","position","bottom","left","PinWrap","to_address","amount","bank","MsgSend","from_address","denom","updateBalance","balance","balances","Import","noValidate","method","copyText","getElementById","select","execCommand","ImportPrivateKey","privatekey","Session","src","alt","width","Home","opener","postMessage","close","constants","DATA_SOURCE","TEST_CASE","ORACLE_SCRIPT","ProviderMenu","isOScript","setIsOScript","isSuccess","setIsSuccess","provider","MsgCreateAIDataSource","owner","MsgCreateTestCase","ds","tc","dsArr","tcArr","MsgCreateOracleScript","data_sources","test_cases","htmlFor","curName","setCurName","newName","setNewName","setDes","setAddress","setType","setDs","setTc","handleEdit","d_sources","t_cases","MsgEditAIDataSource","old_name","new_name","MsgEditTestCase","MsgEditOracleScript","networks","Oraichain","lcd","process","URL","network","searchParams","get","symbol","setBech32MainPrefix","setPath","trigger","generateLanguage","locale","ROUTE","definePath","compile","routeComponents","pathToRegexp","exec","pathname","subPaths","options","Object","PrivateRoute","Component","component","isLoggedIn","rest","render","props","useLocation","match","useRouteMatch","params","selectedOption","setSelectedOption","changeLanguage","lng","styles","chainId","exact","ContractQuery","ContractExecute","ContractDeploy","ScriptSet","ScriptEdit","RequestSet","RequestGet","Send","Transaction","getUnicodeFlagIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","App","ReactDOM","I18nextProvider"],"mappings":"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","file":"static/js/main.af16d261.chunk.js","sourcesContent":["import bech32 from 'bech32';\nimport * as bip32 from 'bip32';\n\nexport const countWords = (str) => {\n  return str.trim().split(/\\s+/).length;\n};\n\nexport const cleanMnemonics = (mnemonics) => {\n  mnemonics = mnemonics.split(',').join(' ');\n  mnemonics = mnemonics.replace(/ +/g, ' '); // Replace connected spaces with one space\n  return mnemonics;\n};\n\nexport const isMnemonicsValid = (mnemonics, disablechecksum = false) => {\n  var validFlag = true;\n  // To check the checksum, it is a process to check whether there is an error in creating an address, so you can input any path and prefix.\n  try {\n    if (disablechecksum) {\n      window.cosmos.getAddress(mnemonics, false);\n    } else {\n      window.cosmos.getAddress(cleanMnemonics(mnemonics));\n    }\n  } catch (e) {\n    validFlag = false;\n  }\n  return validFlag;\n};\n\nexport const getFileSize = (size) => {\n  const fileSize = size.toString();\n  if (fileSize.length < 4) return `${fileSize} bytes`;\n  if (fileSize.length < 7) return `${Math.round(+fileSize / 1024).toFixed(2)} kb`;\n  return `${(Math.round(+fileSize / 1024) / 1000).toFixed(2)} MB`;\n};\n\nexport const customStyles = {\n  option: (provided, state) => ({\n    ...provided,\n    backgroundColor: state.isSelected ? 'rgb(255 255 255 / 16%)' : 'rgb(33 33 33)',\n    color: '#eee'\n  }),\n  control: (provided, state) => ({\n    ...provided,\n    backgroundColor: 'rgb(33 33 33)'\n  }),\n  dropdownIndicator: (provided, state) => ({\n    ...provided,\n    color: '#eee'\n  }),\n  menu: (provided, state) => ({\n    ...provided,\n    backgroundColor: 'rgb(33 33 33)',\n    border: '1px solid rgb(144 202 249 / 50%)'\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return {\n      ...provided,\n      opacity,\n      transition,\n      color: '#eee'\n    };\n  }\n};\n\nexport const getPassword = () => {\n  return window.jQuery('input[type=password]').val() || localStorage.getItem('password');\n};\n\nexport const getChildkeyFromDecrypted = (decrypted) => {\n  // it is mnemonics\n  if (decrypted.length > 60 + window.cosmos.bech32MainPrefix.length) {\n    return window.cosmos.getChildKey(decrypted);\n  }\n  const { prefix, words } = bech32.decode(decrypted);\n  const buffer = Buffer.from(bech32.fromWords(words));\n  const childKey = bip32.fromPrivateKey(buffer, Buffer.from(new Array(32)));\n  return childKey;\n};\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport CryptoJS from 'crypto-js';\nimport _ from 'lodash';\nimport { cleanMnemonics, getPassword, getChildkeyFromDecrypted } from '../utils';\nimport { useHistory } from 'react-router';\nimport { useTranslation } from 'react-i18next';\nimport * as actions from '../actions';\n\nexport const openPinWrap = () => {\n  const $ = window.jQuery;\n  let password = getPassword();\n\n  if ($.trim(password) === '') {\n    alert(\n      'You cannot sign transactions.\\n1. Check your browser is in private mode.\\n2. Type \"chrome://settings/passwords\" into your browser and press Enter to toggle the switch \"Offer to save passwords\" to the on.'\n    );\n    window.location.href = '/import';\n    return;\n  }\n  $('#allowBtn>span').html('<i class=\"fa fa-spinner fa-spin\"></i>');\n  $('.pin-wrap').addClass('open');\n};\n\nconst PinWrap = ({ pinType, updateUser, onChildKey }) => {\n  const history = useHistory();\n  const { t, i18n } = useTranslation();\n  let input = '',\n    correct = '';\n  const $ = window.jQuery;\n  const cosmos = window.cosmos;\n\n  useEffect(() => {\n    $('.dot').attr('class', 'dot');\n  });\n\n  function showCorrectPinAnimation() {\n    $('.dot').addClass('correct');\n  }\n\n  function showWrongPinAnimation() {\n    $('.dot').addClass('wrong');\n    $('.wrapper-number').css('display', 'grid');\n    $('.wrapper-alphabet').css('display', 'none');\n  }\n\n  // pin close\n  const hidePin = () => {\n    // Init PIN\n\n    for (let i = 0; i < 5; i++) {\n      input = input.substr(0, input.length - 1);\n    }\n\n    $('#pin-title').text('Please enter your PIN.');\n\n    // Init Keypad\n    $('.wrapper-number').css('display', 'grid');\n    $('.wrapper-alphabet').css('display', 'none');\n\n    correct = '';\n\n    $('.pin-wrap').removeClass('open');\n    $('.dot').attr('class', 'dot');\n  };\n\n  const numberClick = (e) => {\n    const number = e.target;\n    let inputStr = number.innerText.trim();\n    const dots = Array.prototype.slice.call(document.querySelectorAll('.dot'));\n\n    if (inputStr === '←') {\n      if (input.length > 0) {\n        dots[input.length - 1].className = 'dot';\n        input = input.substr(0, input.length - 1);\n\n        if (input.length < 4) {\n          $('.wrapper-number').css('display', 'grid');\n          $('.wrapper-alphabet').css('display', 'none');\n        }\n      }\n    } else {\n      input += inputStr;\n      dots[input.length - 1].className = 'dot active';\n    }\n\n    if (input.length === 4) {\n      $('.wrapper-number').css('display', 'none');\n      $('.wrapper-alphabet').css('display', 'grid');\n    }\n\n    if (input.length >= 5) {\n      if (pinType.indexOf('import') !== -1 && correct === '') {\n        correct = input;\n        // Please confirm your PIN.\n\n        // Change title\n        $('#pin-title').text('Please confirm your PIN.');\n\n        // Init Keypad\n        $('.wrapper-number').css('display', 'grid');\n        $('.wrapper-alphabet').css('display', 'none');\n\n        // Init PIN\n        // console.log(dots, input.length - 1, dots[input.length - 1]);\n        for (let i = 0; i < 5; i++) {\n          dots[input.length - 1].className = 'dot';\n          input = input.substr(0, input.length - 1);\n        }\n      } else if (pinType.indexOf('import') !== -1 && correct.length === 5) {\n        if (input !== correct) {\n          showWrongPinAnimation();\n        } else {\n          showCorrectPinAnimation();\n          let decrypted = '';\n          const account = $('#account').val();\n          if (pinType === 'import-privatekey') {\n            decrypted = $('#privatekey').val().trim();\n          } else {\n            // INIT\n            decrypted = $('#mnemonics').val().trim();\n            if (window.option !== 'disablechecksum') {\n              decrypted = cleanMnemonics(decrypted);\n            }\n          }\n\n          const childKey = getChildkeyFromDecrypted(decrypted);\n          updateUser({ name: account, address: cosmos.getAddress(childKey) });\n          const encrypted = CryptoJS.AES.encrypt(decrypted, input);\n\n          setTimeout(function () {\n            $('#encrypted-import').text(encrypted);\n            $('#encrypted-import-for-copy').val(encrypted);\n            $('.pin-wrap').removeClass('open');\n            // import page2\n            $('#import-form1').hide();\n            $('#import-form2').show();\n            $('#hidden-account').val(account);\n          }, 500);\n        }\n      } else if (pinType === 'signin' || pinType === 'tx') {\n        // decrypt input value\n        let encryptedMnemonics = getPassword().trim();\n\n        try {\n          let decrypted = CryptoJS.AES.decrypt(encryptedMnemonics, input);\n          let decryptedMnemonics = decrypted.toString(CryptoJS.enc.Utf8);\n          console.log(decryptedMnemonics);\n\n          if (decryptedMnemonics === '') {\n            // wrong\n            showWrongPinAnimation();\n          } else {\n            // correct\n            showCorrectPinAnimation();\n\n            if (pinType === 'signin') {\n              const childKey = getChildkeyFromDecrypted(decryptedMnemonics);\n              const address = cosmos.getAddress(childKey);\n              const account = $('.input-account').val().trim();\n\n              // go to transaction with address, other go to send\n              updateUser({ name: account, address });\n              if (window.stdSignMsgByPayload) {\n                history.push(`/${i18n.language}/transaction`);\n              } else {\n                history.push(`/${i18n.language}/`);\n              }\n            } else if (pinType === 'tx') {\n              let password = getPassword();\n\n              if (password.trim() === '') {\n                alert('Could not retrieve account stored in Keychain.');\n                return;\n              }\n\n              let decrypted = CryptoJS.AES.decrypt(password.trim(), input);\n              let decryptedMnemonics = decrypted.toString(CryptoJS.enc.Utf8);\n              const childKey = getChildkeyFromDecrypted(decryptedMnemonics);\n\n              // hide UI\n              $('#allowBtn>span').empty();\n              hidePin();\n\n              if (onChildKey) {\n                onChildKey(childKey);\n                return;\n              }\n              // normal sign\n              // console.log('payload', window.stdSignMsgByPayload);\n              if (!window.stdSignMsgByPayload) return;\n              // loader\n              // console.log(childKey);\n              cosmos\n                .submit(childKey, window.stdSignMsgByPayload)\n                .then((res) => {\n                  console.log(res);\n                })\n                .catch((err) => {\n                  console.log(err);\n                });\n            }\n          }\n        } catch (error) {\n          window.alert(error.message);\n          // Error: Malformed UTF-8 data\n          showWrongPinAnimation();\n        }\n      }\n\n      input = '';\n    }\n    window.setTimeout(function () {\n      number.className = 'finger grid-number';\n    }, 1000);\n  };\n\n  const ShuffledNumCode = () => {\n    const numSlice = _.shuffle([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n    // Make these codes\n    //<div class=\"finger grid-number\">1</div>\n    //<div class=\"finger grid-number\">2</div>\n    //...\n    //<div class=\"finger grid-number\">9</div>\n    //<div class=\"grid-number\"></div>\n    //<div class=\"finger grid-number\">0</div>\n    //<div class=\"finger grid-number\">←</div>\n\n    const shuffledNumCode = [];\n    let key = 0;\n    for (let i = 0; i < 10; i++) {\n      shuffledNumCode.push(\n        <div key={key++} className=\"finger grid-number\" onClick={numberClick}>\n          {numSlice[i]}\n        </div>\n      );\n      if (i === 8) {\n        shuffledNumCode.push(<div key={key++} className=\"grid-number\" onClick={numberClick}></div>);\n      } else if (i === 9) {\n        shuffledNumCode.push(\n          <div key={key++} className=\"finger grid-number\" onClick={numberClick}>\n            ←\n          </div>\n        );\n      }\n    }\n    return <>{shuffledNumCode}</>;\n  };\n\n  const ShuffledAlphabetCode = () => {\n    const alphabetSlice = _.shuffle(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']);\n\n    // Make these codes\n    //<div class=\"finger grid-number\">A</div>\n    //<div class=\"finger grid-number\">B</div>\n    //...\n    //<div class=\"finger grid-number\">Z</div>\n    //<div class=\"grid-number\"></div>\n    //<div class=\"finger grid-number\">←</div>\n\n    const shuffledAlphabetCode = [];\n    let key = 0;\n    for (let i = 0; i < 26; i++) {\n      shuffledAlphabetCode.push(\n        <div key={key++} className=\"finger grid-number\" onClick={numberClick}>\n          {alphabetSlice[i]}\n        </div>\n      );\n      if (i === 25) {\n        shuffledAlphabetCode.push(<div key={key++} className=\"grid-number\" onClick={numberClick}></div>);\n        shuffledAlphabetCode.push(\n          <div key={key++} className=\"finger grid-number\" onClick={numberClick}>\n            ←\n          </div>\n        );\n      }\n    }\n    return <>{shuffledAlphabetCode}</>;\n  };\n\n  return (\n    <div className=\"pin-wrap\">\n      <button onClick={hidePin} type=\"button\">\n        ✕\n      </button>\n      <div className=\"pin-cont\">\n        <h2 id=\"pin-title\">Please enter your PIN.</h2>\n        <p>\n          PIN is required for every transaction.\n          <br />\n          <span>\n            If lost, you cannot reset or recover your PIN.\n            <br />\n          </span>\n        </p>\n        <div className=\"dots-cointainer\">\n          <div className=\"dots\">\n            <div className=\"dot\" />\n            <div className=\"dot\" />\n            <div className=\"dot\" />\n            <div className=\"dot\" />\n            <div>+</div>\n            <div className=\"dot\" />\n          </div>\n        </div>\n        <div className=\"wrapper-number no-select\">\n          <ShuffledNumCode />\n        </div>\n        <div className=\"wrapper-alphabet no-select\">\n          <ShuffledAlphabetCode />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, actions)(PinWrap);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nconst ContractMenu = ({ selected }) => {\n    const { t, i18n } = useTranslation();\n    const contractMenu = [\n        {\n            path: 'set',\n            label: 'Set Request'\n        },\n        {\n            path: 'get',\n            label: 'Get Request'\n        }\n    ];\n\n    return (\n        <h2 className=\"contract-menu\">\n            {contractMenu.map((item) => {\n                if (item.path === selected) return <span key={item.path}>{item.label}</span>;\n                return (\n                    <Link key={item.path} to={`/${i18n.language}/airequest/${item.path}`}>\n                        <button>{item.label}</button>\n                    </Link>\n                );\n            })}\n        </h2>\n    );\n};\n\nexport default ContractMenu;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 306;","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport Editor from '@monaco-editor/react';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport Form from '@rjsf/core';\n\nimport ContractMenu from './ContractMenu';\n\nimport { getFileSize } from '../../utils';\n\nconst Query = () => {\n  const $ = window.jQuery;\n  const { t, i18n } = useTranslation();\n  const [inputContract, inputContractChange] = useState('{}');\n  const [formData, setFormData] = useState({});\n  const [schema, setSchema] = useState();\n  const [blocking, setBlocking] = useState(false);\n  const cosmos = window.cosmos;\n\n  const queryContract = async () => {\n    try {\n      const input = Buffer.from(schema ? JSON.stringify(formData) : inputContract).toString('base64');\n      setBlocking(true);\n      const address = $('#contract_address').val().trim();\n      const data = await fetch(`${cosmos.url}/wasm/v1beta1/contract/${address}/smart/${input}`).then((res) => res.text());\n      $('#tx-json').text(data);\n    } catch (ex) {\n      alert(ex.message);\n    } finally {\n      setBlocking(false);\n    }\n  };\n\n  const onSchemaFileChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    $('#filename-schema').html(`<strong>${file.name} (${getFileSize(file.size)})</strong>`);\n    const blob = new Blob([file]);\n    const fileBuffer = await blob.arrayBuffer();\n    const schemaBody = Buffer.from(fileBuffer).toString();\n    setSchema(JSON.parse(schemaBody));\n  };\n\n  const clearSchemaFile = (e) => {\n    $('#filename-schema').text('Query Schema File');\n    $('#schema-file').val('');\n    setSchema(false);\n    e.preventDefault();\n  };\n\n  return (\n    <BlockUi tag=\"div\" blocking={blocking}>\n      <ContractMenu selected=\"query\" />\n      <div className=\"keystation-form\">\n        <div className=\"keystation-tx-info\" id=\"tx-info\">\n          <div className=\"field\">\n            <span>Contract Address</span>\n            <input id=\"contract_address\" />\n          </div>\n\n          <div className=\"field\">\n            <label className=\"file-upload\">\n              <input type=\"file\" id=\"schema-file\" onChange={onSchemaFileChange} />\n              <i className=\"fa fa-cloud-upload\" /> <small id=\"filename-schema\">Query Schema File</small>\n              {schema && <i className=\"fa fa-trash\" onClick={clearSchemaFile} />}\n            </label>\n          </div>\n          {schema && <Form schema={schema} formData={formData} onChange={({ formData }) => setFormData(formData)} />}\n\n          {!schema && (\n            <div className=\"field\">\n              <span>Input</span>\n              <Editor theme=\"vs-dark\" height={100} defaultLanguage=\"json\" value={inputContract} onChange={inputContractChange} />\n            </div>\n          )}\n        </div>\n        <div className=\"tx-btn-wrap btn-center\">\n          <button type=\"button\" onClick={queryContract} id=\"allowBtn\">\n            Continue <i className=\"fa fa-arrow-right\" />\n          </button>\n        </div>\n      </div>\n      <div className=\"keystation-tx-json\" id=\"tx-json\"></div>\n    </BlockUi>\n  );\n};\n\nexport default Query;\n","import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Editor from '@monaco-editor/react';\nimport BlockUi from 'react-block-ui';\nimport { connect } from 'react-redux';\nimport 'react-block-ui/style.css';\nimport Form from '@rjsf/core';\nimport ContractMenu from './ContractMenu';\nimport PinWrap, { openPinWrap } from '../PinWrap';\nimport { getFileSize } from '../../utils';\nimport Cosmos from '@oraichain/cosmosjs';\nconst message = Cosmos.message;\n\nconst Execute = ({ user }) => {\n  const $ = window.jQuery;\n  const { t, i18n } = useTranslation();\n  const [inputContract, inputContractChange] = useState('{}');\n  const [formData, setFormData] = useState({});\n  const [schema, setSchema] = useState();\n  const [blocking, setBlocking] = useState(false);\n  const cosmos = window.cosmos;\n\n  const getHandleMessage = (contract, msg) => {\n    const msgSend = new message.cosmwasm.wasm.v1beta1.MsgExecuteContract({\n      contract,\n      msg,\n      sender: user.address\n    });\n\n    const msgSendAny = new message.google.protobuf.Any({\n      type_url: '/cosmwasm.wasm.v1beta1.MsgExecuteContract',\n      value: message.cosmwasm.wasm.v1beta1.MsgExecuteContract.encode(msgSend).finish()\n    });\n\n    return new message.cosmos.tx.v1beta1.TxBody({\n      messages: [msgSendAny]\n    });\n  };\n\n  const onChildKey = async (childKey) => {\n    try {\n      const input = Buffer.from(schema ? JSON.stringify(formData) : inputContract).toString('base64');\n      setBlocking(true);\n      const address = $('#contract_address').val().trim();\n      const txBody = getHandleMessage(address, input);\n      const res = await cosmos.submit(childKey, txBody, 'BROADCAST_MODE_BLOCK');\n      $('#tx-json').text(res.tx_response.raw_log);\n    } catch (ex) {\n      alert(ex.message);\n    } finally {\n      setBlocking(false);\n    }\n  };\n\n  const onSchemaFileChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    $('#filename-schema').html(`<strong>${file.name} (${getFileSize(file.size)})</strong>`);\n    const blob = new Blob([file]);\n    const fileBuffer = await blob.arrayBuffer();\n    const schemaBody = Buffer.from(fileBuffer).toString();\n    setSchema(JSON.parse(schemaBody));\n  };\n\n  const clearSchemaFile = (e) => {\n    $('#filename-schema').text('Handle Schema File');\n    $('#schema-file').val('');\n    setSchema(false);\n    e.preventDefault();\n  };\n\n  return (\n    <BlockUi tag=\"div\" blocking={blocking}>\n      <ContractMenu selected=\"execute\" />\n      <div className=\"keystation-form\">\n        <div className=\"keystation-tx-info\" id=\"tx-info\">\n          <div className=\"field\">\n            <span>Contract Address</span>\n            <input id=\"contract_address\" />\n          </div>\n\n          <div className=\"field\">\n            <label className=\"file-upload\">\n              <input type=\"file\" id=\"schema-file\" onChange={onSchemaFileChange} />\n              <i className=\"fa fa-cloud-upload\" /> <small id=\"filename-schema\">Handle Schema File</small>\n              {schema && <i className=\"fa fa-trash\" onClick={clearSchemaFile} />}\n            </label>\n          </div>\n          {schema && <Form schema={schema} formData={formData} onChange={({ formData }) => setFormData(formData)} />}\n\n          {!schema && (\n            <div className=\"field\">\n              <span>Input</span>\n              <Editor theme=\"vs-dark\" height={100} defaultLanguage=\"json\" value={inputContract} onChange={inputContractChange} />\n            </div>\n          )}\n        </div>\n        <div className=\"tx-btn-wrap btn-center\">\n          <button type=\"button\" onClick={openPinWrap} id=\"allowBtn\">\n            Continue <i className=\"fa fa-arrow-right\" />\n          </button>\n        </div>\n      </div>\n      <div className=\"keystation-tx-json\" id=\"tx-json\"></div>\n\n      <PinWrap show={false} pinType=\"tx\" onChildKey={onChildKey} />\n    </BlockUi>\n  );\n};\n\nexport default connect((state) => ({\n  user: state.user\n}))(Execute);\n","import React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport Form from '@rjsf/core';\n\nimport { getFileSize } from '../../utils';\nimport PinWrap, { openPinWrap } from '../PinWrap';\nimport Editor from '@monaco-editor/react';\nimport ContractMenu from './ContractMenu';\nimport * as actions from '../../actions';\nimport Cosmos from '@oraichain/cosmosjs';\nconst message = Cosmos.message;\n\nconst Deploy = ({ user, updateContractAddress }) => {\n  const $ = window.jQuery;\n  const { t, i18n } = useTranslation();\n  const [blocking, setBlocking] = useState(false);\n  const [inputContract, inputContractChange] = useState('{}');\n  const [formData, setFormData] = useState({});\n  const [schema, setSchema] = useState();\n  const [wasmBody, setWasmBody] = useState('');\n  const cosmos = window.cosmos;\n\n  useEffect(() => {\n    const handler = (e, file) => {\n      processFile(file);\n    };\n    $('#filename').on('file', handler);\n    return () => {\n      $('#filename').off('file', handler);\n    };\n  }, []);\n\n  const getStoreMessage = (wasm_byte_code) => {\n    const msgSend = new message.cosmwasm.wasm.v1beta1.MsgStoreCode({\n      wasm_byte_code,\n      sender: user.address\n    });\n\n    const msgSendAny = new message.google.protobuf.Any({\n      type_url: '/cosmwasm.wasm.v1beta1.MsgStoreCode',\n      value: message.cosmwasm.wasm.v1beta1.MsgStoreCode.encode(msgSend).finish()\n    });\n\n    return new message.cosmos.tx.v1beta1.TxBody({\n      messages: [msgSendAny]\n    });\n  };\n\n  const getInstantiateMessage = (code_id, init_msg, label = '') => {\n    const msgSend = new message.cosmwasm.wasm.v1beta1.MsgInstantiateContract({\n      code_id,\n      init_msg,\n      label,\n      sender: user.address\n    });\n\n    const msgSendAny = new message.google.protobuf.Any({\n      type_url: '/cosmwasm.wasm.v1beta1.MsgInstantiateContract',\n      value: message.cosmwasm.wasm.v1beta1.MsgInstantiateContract.encode(msgSend).finish()\n    });\n\n    return new message.cosmos.tx.v1beta1.TxBody({\n      messages: [msgSendAny]\n    });\n  };\n\n  const onChildKey = async (childKey) => {\n    try {\n      const label = $('#label').val().trim();\n      if (label.length == 0) {\n        alert('label of the smart contract cannot be empty');\n        return;\n      }\n      setBlocking(true);\n      // will allow return childKey from Pin\n      const txBody1 = getStoreMessage(wasmBody);\n      // higher gas limit\n      const res1 = await cosmos.submit(childKey, txBody1, 'BROADCAST_MODE_BLOCK', 0, 2000000);\n\n      if (res1.tx_response.code !== 0) {\n        alert(res1.tx_response.raw_log);\n        return;\n      }\n\n      // next instantiate code\n      const codeId = res1.tx_response.logs[0].events[0].attributes.find((attr) => attr.key === 'code_id').value;\n      const input = Buffer.from(schema ? JSON.stringify(formData) : inputContract).toString('base64');\n      const txBody2 = getInstantiateMessage(codeId, input, label);\n      const res2 = await cosmos.submit(childKey, txBody2, 'BROADCAST_MODE_BLOCK');\n      const contractAddress = res2.tx_response.logs[0].events[0].attributes.find((attr) => attr.key === 'contract_address').value;\n      $('#address').val(contractAddress);\n      updateContractAddress(contractAddress);\n      $('#tx-json').text(`${res1.tx_response.raw_log}\\n\\n${res2.tx_response.raw_log}`);\n    } catch (ex) {\n      alert(ex.message);\n    } finally {\n      setBlocking(false);\n    }\n  };\n\n  const onFileChange = (e) => {\n    return processFile(e.target.files[0]);\n  };\n\n  const processFile = async (file) => {\n    if (!file) return;\n\n    let fileBuffer;\n    if (file.data) {\n      // data must be a buffer to work\n      fileBuffer = file.data;\n    } else {\n      const blob = new Blob([file]);\n      fileBuffer = await blob.arrayBuffer();\n    }\n    setWasmBody(Buffer.from(fileBuffer).toString('base64'));\n    $('#filename').html(`<strong>${file.name} (${getFileSize(fileBuffer.byteLength)})</strong>`);\n  };\n\n  const onSchemaFileChange = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    $('#filename-schema').html(`<strong>${file.name} (${getFileSize(file.size)})</strong>`);\n    const blob = new Blob([file]);\n    const fileBuffer = await blob.arrayBuffer();\n    const schemaBody = Buffer.from(fileBuffer).toString();\n    setSchema(JSON.parse(schemaBody));\n  };\n\n  const clearWasmFile = (e) => {\n    $('#filename').text('Wasm File');\n    $('#wasm-file').val('');\n    setWasmBody('');\n    e.preventDefault();\n  };\n\n  const clearSchemaFile = (e) => {\n    $('#filename-schema').text('Init Schema File');\n    $('#schema-file').val('');\n    setSchema(false);\n    e.preventDefault();\n  };\n\n  return (\n    <BlockUi tag=\"div\" blocking={blocking}>\n      <ContractMenu selected=\"deploy\" />\n      <form className=\"keystation-form\" id=\"interact-form\">\n        <input style={{ display: 'none' }} type=\"text\" tabIndex={-1} spellCheck=\"false\" name=\"account\" defaultValue={user.name} />\n        <input style={{ display: 'none' }} type=\"password\" autoComplete=\"current-password\" tabIndex={-1} spellCheck=\"false\" />\n        <div className=\"keystation-tx-info\" id=\"tx-info\">\n          <div className=\"field\">\n            <span>Label</span>\n            <input id=\"label\" />\n          </div>\n\n          <div className=\"field\">\n            <label className=\"file-upload\">\n              <input type=\"file\" id=\"wasm-file\" onChange={onFileChange} />\n              <i className=\"fa fa-cloud-upload\" /> <small id=\"filename\">Wasm File</small> {wasmBody && <i className=\"fa fa-trash\" onClick={clearWasmFile} />}\n            </label>\n            <label className=\"file-upload ml-10\">\n              <input type=\"file\" id=\"schema-file\" onChange={onSchemaFileChange} />\n              <i className=\"fa fa-cloud-upload\" /> <small id=\"filename-schema\">Init Schema File</small> {schema && <i className=\"fa fa-trash\" onClick={clearSchemaFile} />}\n            </label>\n          </div>\n          {schema && <Form schema={schema} formData={formData} onChange={({ formData }) => setFormData(formData)} />}\n\n          {!schema && (\n            <div className=\"field\">\n              <span>Init Input</span>\n              <Editor theme=\"vs-dark\" height={100} defaultLanguage=\"json\" value={inputContract} onChange={inputContractChange} />\n            </div>\n          )}\n        </div>\n        <div className=\"tx-btn-wrap btn-center\">\n          <button type=\"button\" onClick={openPinWrap} id=\"allowBtn\">\n            Continue <i className=\"fa fa-arrow-right\" />\n          </button>\n        </div>\n\n        <div className=\"field readonly\">\n          <span style={{ minWidth: 125 }}>Contract Address</span>\n          <input id=\"address\" readOnly />\n        </div>\n      </form>\n\n      <div className=\"keystation-tx-json\" id=\"tx-json\"></div>\n\n      <PinWrap show={false} pinType=\"tx\" onChildKey={onChildKey} />\n    </BlockUi>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    user: state.user\n  }),\n  actions\n)(Deploy);\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport bech32 from 'bech32';\nimport { getFileSize } from '../../utils';\nimport KSUID from 'ksuid';\nimport PinWrap, { openPinWrap } from '../PinWrap';\nimport Long from 'long';\nimport RequestMenu from './RequestMenu';\nimport * as actions from '../../actions';\nimport Cosmos from '@oraichain/cosmosjs';\nconst message = Cosmos.message;\n\nconst CreateAIRequest = ({ user, updateRequestId }) => {\n    const $ = window.jQuery;\n    const { t, i18n } = useTranslation();\n    const [blocking, setBlocking] = useState(false);\n    const [isOScript, setIsOScript] = useState(false);\n    const [inputFile, setInputFile] = useState('');\n    const [outputFile, setOutputFile] = useState('');\n    const [showInput, setShowInput] = useState(true);\n    const [showOutput, setShowOutput] = useState(true);\n    const cosmos = window.cosmos;\n\n    const pattern = new RegExp(/[~`!#$%\\^&*+=\\-\\[\\]\\\\';/{}|\\\\\":<>\\?]/);\n\n    useEffect(() => {\n        const handler = (e, file) => {\n            processFile(file);\n        };\n        $('#filename').on('file', handler);\n        return () => {\n            $('#filename').off('file', handler);\n        };\n    }, []);\n\n    const clearFile = (e) => {\n        if (e.target.id === 'trash-output') {\n            $('#filename').text('Output file');\n            $('#output-file').val('');\n            setOutputFile('');\n        } else {\n            $('#filename').text('Input file');\n            $('#input-file').val('');\n            setInputFile('');\n        }\n        e.preventDefault();\n    };\n\n    const onFileChange = (e) => {\n        return processFile(e.target.files[0], e.target.id);\n    };\n\n    const onType = (e) => {\n        if (e.target.id === 'input') {\n            let input = $('#input').val();\n            // if empty = 0 then show file option\n            if (input.length === 0) {\n                setShowInput(true);\n            } else {\n                setShowInput(false);\n                setInputFile('');\n            }\n        } else {\n            let output = $('#expected-output').val();\n            console.log('output: ', output);\n            // if empty = 0 then show file option\n            if (output.length === 0) {\n                setShowOutput(true);\n            } else {\n                setShowOutput(false);\n                setOutputFile('');\n            }\n        }\n        console.log('hello world');\n    };\n\n    const processFile = async (file, id) => {\n        if (!file) return;\n\n        let fileBuffer;\n        if (file.data) {\n            fileBuffer = file.data;\n        } else {\n            const blob = new Blob([file]);\n            fileBuffer = await blob.arrayBuffer();\n        }\n\n        let buffer = Buffer.from(fileBuffer).toString();\n        if (id === 'input-file') {\n            setInputFile(buffer);\n        } else if (id === 'output-file') {\n            setOutputFile(buffer);\n        }\n        $('#filename').html(`<strong>${file.name} (${getFileSize(file.size)})</strong>`);\n    };\n\n    const handleSet = async () => {\n        const oscriptName = $('#oscript-name').val().trim();\n        try {\n            const data = await fetch(`${cosmos.url}/provider/oscript/${oscriptName}`).then((res) => res.json());\n            console.log('data: ', data);\n            if (data.code !== undefined) {\n                alert('current name of the script is not found');\n                return;\n            }\n            let description = $('#des').val().trim();\n            let valCount = $('#validator-count').val().trim();\n            let requestFees = $('#request-fees').val().trim();\n            let memo = $('#memo').val().trim();\n            let input = $('#input').val().trim();\n            let expectedOutput = $('#expected-output').val().trim();\n            if (pattern.test(oscriptName) || pattern.test(description) || Number.isInteger(parseInt(valCount)) === false || pattern.test(memo)) {\n                alert('inputs has invalid values');\n                return;\n            }\n            openPinWrap();\n        } catch (err) {\n            alert('unexpected error from the server: ', err);\n            return;\n        }\n    };\n\n    const getTxBody = (childKey) => {\n        let oscriptName = $('#oscript-name').val().trim();\n        let accAddress = bech32.fromWords(bech32.toWords(childKey.identifier));\n        let description = $('#des').val().trim();\n        let valCount = $('#validator-count').val().trim();\n        let requestFees = $('#request-fees').val().trim();\n        let memo = $('#memo').val().trim();\n        let input = $('#input').val().trim();\n        let expectedOutput = $('#expected-output').val().trim();\n        let reqId = KSUID.randomSync().string;\n        if (inputFile.length !== 0) {\n            input = inputFile;\n        }\n        if (outputFile.length !== 0) {\n            expectedOutput = outputFile;\n        }\n        const msgSend = new message.oraichain.orai.airequest.MsgSetAIRequest({\n            request_id: reqId,\n            oracle_script_name: oscriptName,\n            creator: accAddress,\n            validator_count: new Long(valCount),\n            fees: requestFees,\n            input: Buffer.from(input),\n            expected_output: Buffer.from(expectedOutput)\n        });\n\n        const msgSendAny = new message.google.protobuf.Any({\n            type_url: '/oraichain.orai.airequest.MsgSetAIRequest',\n            value: message.oraichain.orai.airequest.MsgSetAIRequest.encode(msgSend).finish()\n        });\n\n        return new message.cosmos.tx.v1beta1.TxBody({\n            messages: [msgSendAny],\n            memo: memo\n        });\n    };\n\n    const onChildKey = async (childKey) => {\n        try {\n            setBlocking(true);\n            // will allow return childKey from Pin\n            const txBody = getTxBody(childKey);\n            console.log('tx body: ', txBody);\n            // higher gas limit\n            const res = await cosmos.submit(childKey, txBody, 'BROADCAST_MODE_BLOCK');\n            if (res.tx_response.code !== 0) {\n                alert(res.tx_response.raw_log);\n                return;\n            }\n            const requestId = JSON.parse(res.tx_response.raw_log)[0].events[0].attributes[0].value;\n            $('#tx-json').text(res.tx_response.raw_log + '\\n' + 'request id: ' + requestId);\n            // check if the broadcast message is successful or not\n            updateRequestId({ requestId });\n        } catch (ex) {\n            alert(ex.message);\n            return;\n        } finally {\n            setBlocking(false);\n        }\n    };\n\n    return (\n        <BlockUi tag=\"div\" blocking={blocking}>\n            <RequestMenu selected=\"set\" />\n            <form className=\"keystation-form\">\n                <input style={{ display: 'none' }} type=\"text\" tabIndex={-1} spellCheck=\"false\" name=\"account\" defaultValue={user.name} />\n                <input style={{ display: 'none' }} type=\"password\" autoComplete=\"current-password\" tabIndex={-1} spellCheck=\"false\" />\n                <div className=\"keystation-tx-info\" id=\"tx-info\">\n                    <h3 className=\"send\">Set</h3>\n                    <span>{t('creator')}</span>\n                    <p>{user.address} </p>\n                    <div className=\"field\">\n                        <span>{t('oracleScriptName')}</span>\n                        <input id=\"oscript-name\" />\n                    </div>\n                    <div className=\"field\">\n                        <span>{t('description')}</span>\n                        <input id=\"des\" />\n                    </div>\n\n                    <div className=\"field\">\n                        <span>{t('validatorCount')}</span>\n                        <input id=\"validator-count\" />\n                    </div>\n                    <div className=\"field\">\n                        <span>{t('requestFees')}</span>\n                        <input id=\"request-fees\" />\n                    </div>\n                    <div className=\"field\">\n                        <span>{t('input')}</span>\n                        <input id=\"input\" onInput={onType} />\n                        {showInput && (\n                            <label className=\"file-upload\">\n                                <input type=\"file\" id=\"input-file\" onChange={onFileChange} />\n                                <i className=\"fa fa-cloud-upload\" /> <small id=\"filename\">Input file json</small> {inputFile && <i className=\"fa fa-trash\" id=\"trash-input\" onClick={clearFile} />}\n                            </label>\n                        )}\n                    </div>\n                    <div className=\"field\">\n                        <span>{t('output')}</span>\n                        <input id=\"expected-output\" onInput={onType} />\n                        {showOutput && (\n                            <label className=\"file-upload\">\n                                <input type=\"file\" id=\"output-file\" onChange={onFileChange} />\n                                <i className=\"fa fa-cloud-upload\" /> <small id=\"filename\">Output file json</small> {outputFile && <i className=\"fa fa-trash\" id=\"trash-output\" onClick={clearFile} />}\n                            </label>\n                        )}\n                    </div>\n                    <span>{t('memo')}</span>\n                    <textarea id=\"memo\"></textarea>\n                </div>\n                <div className=\"tx-btn-wrap btn-center\">\n                    <button type=\"button\" onClick={handleSet} id=\"allowBtn\">\n                        Submit\n          </button>\n                </div>\n            </form>\n\n            <div className=\"keystation-tx-json\" id=\"tx-json\"></div>\n\n            <PinWrap show={false} pinType=\"tx\" onChildKey={onChildKey} />\n        </BlockUi>\n    );\n};\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user\n    };\n}\n\nexport default connect(mapStateToProps, actions)(CreateAIRequest);\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport { getFileSize } from '../../utils';\nimport RequestMenu from './RequestMenu';\n\nconst GetAIRequest = ({ user, request }) => {\n  const $ = window.jQuery;\n  const { t, i18n } = useTranslation();\n  const [blocking, setBlocking] = useState(false);\n  const [isOScript, setIsOScript] = useState(false);\n  const [inputFile, setInputFile] = useState('');\n  const [outputFile, setOutputFile] = useState('');\n  const [showInput, setShowInput] = useState(true);\n  const [showOutput, setShowOutput] = useState(true);\n  const cosmos = window.cosmos;\n\n  const pattern = new RegExp(/[~`!#$%\\^&*+=\\-\\[\\]\\\\';/{}|\\\\\":<>\\?]/);\n\n  useEffect(() => {\n    const handler = (e, file) => {\n      processFile(file);\n    };\n    $('#filename').on('file', handler);\n    if (typeof request.requestId === 'string') {\n      $('#request-id').val(request.requestId);\n    }\n    return () => {\n      $('#filename').off('file', handler);\n    };\n  }, []);\n\n  const clearFile = (e) => {\n    if (e.target.id === 'trash-output') {\n      $('#filename').text('Output file');\n      $('#output-file').val('');\n      setOutputFile('');\n    } else {\n      $('#filename').text('Input file');\n      $('#input-file').val('');\n      setInputFile('');\n    }\n    e.preventDefault();\n  };\n\n  const onFileChange = (e) => {\n    return processFile(e.target.files[0], e.target.id);\n  };\n\n  const onType = (e) => {\n    if (e.target.id === 'input') {\n      let input = $('#input').val();\n      // if empty = 0 then show file option\n      if (input.length === 0) {\n        setShowInput(true);\n      } else {\n        setShowInput(false);\n        setInputFile('');\n      }\n    } else {\n      let output = $('#expected-output').val();\n      console.log('output: ', output);\n      // if empty = 0 then show file option\n      if (output.length === 0) {\n        setShowOutput(true);\n      } else {\n        setShowOutput(false);\n        setOutputFile('');\n      }\n    }\n    console.log('hello world');\n  };\n\n  const processFile = async (file, id) => {\n    if (!file) return;\n\n    let fileBuffer;\n    if (file.data) {\n      fileBuffer = file.data;\n    } else {\n      const blob = new Blob([file]);\n      fileBuffer = await blob.arrayBuffer();\n    }\n\n    let buffer = Buffer.from(fileBuffer).toString();\n    if (id === 'input-file') {\n      setInputFile(buffer);\n    } else if (id === 'output-file') {\n      setOutputFile(buffer);\n    }\n    $('#filename').html(`<strong>${file.name} (${getFileSize(file.size)})</strong>`);\n  };\n\n  const handleGet = async () => {\n    const reqId = $('#request-id').val().trim();\n    try {\n      const data = await fetch(`${cosmos.url}/airesult/fullreq/${reqId}`).then((res) => res.json());\n      if (data.code !== undefined) {\n        alert('current AI request is not found');\n        return;\n      }\n      console.log('data: ', data);\n      let results = [];\n      for (let i = 0; i < data.result.results.length; i++) {\n        results.push(atob(data.result.results[i].result).replace(/\\\\/g, ''));\n      }\n      console.log('results: ', results);\n      $('#tx-json').text(JSON.stringify(data) + '\\n\\n\\nAggregated result: ' + results.toString());\n    } catch (err) {\n      alert('unexpected error from the server: ', err);\n      return;\n    }\n  };\n\n  return (\n    <BlockUi tag=\"div\" blocking={blocking}>\n      <RequestMenu selected=\"get\" />\n      <form className=\"keystation-form\">\n        <input style={{ display: 'none' }} type=\"text\" tabIndex={-1} spellCheck=\"false\" name=\"account\" defaultValue={user.name} />\n        <input style={{ display: 'none' }} type=\"password\" autoComplete=\"current-password\" tabIndex={-1} spellCheck=\"false\" />\n        <div className=\"keystation-tx-info\" id=\"tx-info\">\n          <h3 className=\"send\">Get</h3>\n          <div className=\"field\">\n            <span>{t('requestId')}</span>\n            <input id=\"request-id\" />\n          </div>\n        </div>\n        <div className=\"tx-btn-wrap btn-center\">\n          <button type=\"button\" onClick={handleGet} id=\"allowBtn\">\n            Search\n          </button>\n        </div>\n      </form>\n\n      <div className=\"keystation-tx-json\" id=\"tx-json\"></div>\n    </BlockUi>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    request: state.request\n  };\n}\n\nexport default connect(mapStateToProps)(GetAIRequest);\n","export const updateUser = (user) => {\n  return {\n    type: 'updateUser',\n    payload: user\n  };\n};\n\nexport const updateContractAddress = (address) => {\n  return {\n    type: 'updateContractAddress',\n    payload: address\n  }\n}\n\nexport const updateRequestId = (address) => {\n  return {\n    type: 'updateRequestId',\n    payload: address\n  }\n}\n","// reducers.js\nimport { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nconst userReducer = (state = {}, action = {}) => {\n  switch (action.type) {\n    case 'updateUser':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst contractReducer = (state = {}, action = {}) => {\n  switch (action.type) {\n    case 'updateContractAddress':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst requestReducer = (state = {}, action = {}) => {\n  switch (action.type) {\n    case 'updateRequestId':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst createRootReducer = (history) =>\n  combineReducers({\n    user: userReducer,\n    contract: contractReducer,\n    request: requestReducer,\n    router: connectRouter(history)\n  });\n\nexport default createRootReducer;\n","import { createBrowserHistory } from 'history';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { routerMiddleware } from 'connected-react-router';\nimport createRootReducer from './reducers';\n\nexport const history = createBrowserHistory();\n\n// const reduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst reducer = createRootReducer(history);\nconst prefix = 'cosmos.user';\n\nconst configureStore = () => {\n  let prevState = {};\n\n  const defaultStateString = localStorage.getItem(prefix);\n  if (defaultStateString) {\n    try {\n      prevState.user = JSON.parse(defaultStateString);\n    } catch (ex) {\n      console.log(ex);\n    }\n  }\n\n  const store = createStore(\n    reducer, // root reducer with router state\n    prevState,\n    compose(\n      applyMiddleware(\n        routerMiddleware(history) // for dispatching history actions\n      )\n      // reduxDevTools\n    )\n  );\n\n  store.subscribe(() => {\n    const currentState = store.getState();\n    if (currentState.user !== prevState.user) {\n      localStorage.setItem(prefix, JSON.stringify(currentState.user));\n    }\n    prevState = currentState;\n  });\n\n  return store;\n};\n\nexport default configureStore;\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport en from './locales/en.json';\nimport vn from './locales/vn.json';\n\ni18n.use(LanguageDetector).init({\n  // we init with resources\n  resources: {\n    en: { wallet: en },\n    vn: { wallet: vn }\n  },\n  fallbackLng: 'en',\n  debug: true,\n\n  // have a common namespace used around the full app\n  ns: ['wallet'],\n  defaultNS: 'wallet',\n\n  keySeparator: false, // we use content as keys\n\n  interpolation: {\n    escapeValue: false, // not needed for react!!\n    formatSeparator: ','\n  },\n\n  react: {\n    wait: true\n  }\n});\n\nexport default i18n;\n","import React, { useRef, useEffect } from 'react';\n\nfunction classReg(className) {\n  return new RegExp('(^|\\\\s+)' + className + '(\\\\s+|$)');\n}\n\n// classList support for class management\n// altho to be fair, the api sucks because it won't accept multiple classes at once\nlet hasClass, addClass, removeClass;\n\nif ('classList' in document.documentElement) {\n  hasClass = function (elem, c) {\n    return elem.classList.contains(c);\n  };\n  addClass = function (elem, c) {\n    elem.classList.add(c);\n  };\n  removeClass = function (elem, c) {\n    elem.classList.remove(c);\n  };\n} else {\n  hasClass = function (elem, c) {\n    return classReg(c).test(elem.className);\n  };\n  addClass = function (elem, c) {\n    if (!hasClass(elem, c)) {\n      elem.className = elem.className + ' ' + c;\n    }\n  };\n  removeClass = function (elem, c) {\n    elem.className = elem.className.replace(classReg(c), ' ');\n  };\n}\n\nfunction toggleClass(elem, c) {\n  const fn = hasClass(elem, c) ? removeClass : addClass;\n  fn(elem, c);\n}\n\nconst classie = {\n  // full names\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  // short names\n  has: hasClass,\n  add: addClass,\n  remove: removeClass,\n  toggle: toggleClass\n};\n\nfunction onInputFocus(ev) {\n  classie.add(ev.target.parentNode, 'input--filled');\n}\n\nfunction onInputBlur(ev) {\n  if (ev.target.value.trim() === '') {\n    classie.remove(ev.target.parentNode, 'input--filled');\n  }\n}\n\nexport const InputWrap = ({ label, children }) => {\n  const node = useRef();\n\n  useEffect(() => {\n    if (!node.current) return;\n    node.current.querySelectorAll('.input__field').forEach((inputEl) => {\n      // in case the input is already filled..\n      if (inputEl.value.trim() !== '') {\n        classie.add(inputEl.parentNode, 'input--filled');\n      }\n\n      // events:\n      inputEl.addEventListener('focus', onInputFocus);\n      inputEl.addEventListener('blur', onInputBlur);\n    });\n  }, []);\n\n  return (\n    <span className=\"input input--fumi input--filled\" ref={node}>\n      {children}\n      <label className=\"input__label input__label--fumi\">\n        <i className=\"fa fa-fw fa-key icon icon--fumi\" />\n        <span className=\"input__label-content input__label-content--fumi\">{label}</span>\n      </label>\n    </span>\n  );\n};\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getPassword } from '../utils';\nimport { InputWrap } from './common';\n\nimport PinWrap from './PinWrap';\n\nconst SignIn = () => {\n  const { t, i18n } = useTranslation();\n  const $ = window.jQuery;\n  function showPin() {\n    var account = $('.input-account').val();\n    var password = getPassword();\n\n    if ($.trim(account) === '') {\n      $('#formInfoMessage').hide();\n      $('#errorOnSignIn').show().find('span').text('Invalid account.');\n      return;\n    }\n\n    if ($.trim(password) === '') {\n      $('#formInfoMessage').hide();\n      $('#errorOnSignIn').show().find('span').text('Could not retrieve account stored in Keychain. Press the button below the Import Wallet.');\n      return;\n    }\n\n    $('.pin-wrap').addClass('open');\n  }\n\n  return (\n    <div>\n      <h2>{t('signIn')}</h2>\n      <form className=\"keystation-form\">\n        <InputWrap label={t('walletName')}>\n          <input className=\"input__field input__field--fumi input-account\" type=\"text\" />\n        </InputWrap>\n\n        <input style={{ display: 'none' }} type=\"password\" autoComplete=\"current-password\" tabIndex={-1} spellCheck=\"false\" />\n        <p id=\"formInfoMessage\" className=\"information-text\">\n          <i className=\"fa fa-fw fa-question-circle\" /> {t('unableIncognitoMode')}\n        </p>\n        <p id=\"errorOnSignIn\" className=\"error\">\n          <i className=\"fa fa-fw fa-exclamation-circle\" /> <span />\n        </p>\n        <button className=\"button\" type=\"button\" onClick={showPin} id=\"nextBtn\">\n          {t('next')}\n        </button>\n      </form>\n      <Link to={`/${i18n.language}/import`}>{t('importWallet')}</Link>\n      &nbsp;&nbsp;|&nbsp;&nbsp;\n      <Link to={`/${i18n.language}/import-privatekey`}>{t('importPrivateKey')}</Link>\n      <a className=\"disableChecksum\" style={{ position: 'fixed', bottom: 0, left: 0, color: '#fff' }}></a>\n      <PinWrap show={false} pinType=\"signin\" />\n    </div>\n  );\n};\n\nexport default SignIn;\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\n\nimport Cosmos from '@oraichain/cosmosjs';\nimport PinWrap, { openPinWrap } from './PinWrap';\nconst message = Cosmos.message;\n\nconst Send = ({ user }) => {\n  const $ = window.jQuery;\n  const { t, i18n } = useTranslation();\n  const [blocking, setBlocking] = useState(false);\n  const cosmos = window.cosmos;\n\n  const getTxBody = (to_address, amount, memo) => {\n    const msgSend = new message.cosmos.bank.v1beta1.MsgSend({\n      from_address: user.address,\n      to_address,\n      amount: [{ denom: cosmos.bech32MainPrefix, amount }] // 10\n    });\n\n    const msgSendAny = new message.google.protobuf.Any({\n      type_url: '/cosmos.bank.v1beta1.MsgSend',\n      value: message.cosmos.bank.v1beta1.MsgSend.encode(msgSend).finish()\n    });\n\n    return new message.cosmos.tx.v1beta1.TxBody({\n      messages: [msgSendAny],\n      memo\n    });\n  };\n\n  const onChildKey = async (childKey) => {\n    try {\n      setBlocking(true);\n      // will allow return childKey from Pin\n      const to = $('#to').val().trim();\n      const amount = $('#amount').val().trim();\n      const memo = $('#memo').val().trim();\n      const txBody = getTxBody(to, amount, memo);\n      // higher gas limit\n      const res = await cosmos.submit(childKey, txBody, 'BROADCAST_MODE_BLOCK');\n      $('#tx-json').text(res.tx_response.raw_log);\n    } catch (ex) {\n      alert(ex.message);\n    } finally {\n      setBlocking(false);\n    }\n  };\n\n  const updateBalance = async () => {\n    try {\n      const data = await fetch(`${cosmos.url}/cosmos/bank/v1beta1/balances/${user.address}`).then((res) => res.json());\n      const balance = data.balances[0];\n      $('#balance').html(`(${balance.amount} ${balance.denom})`);\n    } catch (ex) {\n      console.log(ex);\n    }\n  };\n\n  useEffect(() => {\n    updateBalance();\n  }, []);\n\n  return (\n    <BlockUi tag=\"div\" blocking={blocking}>\n      <h2>Sign Transaction</h2>\n      <form className=\"keystation-form\">\n        <input style={{ display: 'none' }} type=\"text\" tabIndex={-1} spellCheck=\"false\" name=\"account\" defaultValue={user.name} />\n        <input style={{ display: 'none' }} type=\"password\" autoComplete=\"current-password\" tabIndex={-1} spellCheck=\"false\" />\n        <div className=\"keystation-tx-info\" id=\"tx-info\">\n          <h3 className=\"send\">SEND</h3>\n          <span>{t('from')}</span>\n          <p>\n            {user.address}{' '}\n            <strong>\n              <small id=\"balance\"></small>\n            </strong>\n          </p>\n          <div className=\"field\">\n            <span>{t('to')}</span>\n            <input id=\"to\" />\n          </div>\n          <div className=\"field\">\n            <span>{t('amount')} (orai)</span>\n            <input id=\"amount\" />\n          </div>\n\n          <div className=\"field\">\n            <span>{t('fee')} (orai)</span>\n            <input id=\"fee\" />\n          </div>\n          <span>{t('memo')}</span>\n          <textarea id=\"memo\"></textarea>\n        </div>\n        <div className=\"tx-btn-wrap btn-center\">\n          <button type=\"button\" onClick={openPinWrap} id=\"allowBtn\">\n            Next\n          </button>\n        </div>\n      </form>\n\n      <div className=\"keystation-tx-json\" id=\"tx-json\"></div>\n\n      <PinWrap show={false} pinType=\"tx\" onChildKey={onChildKey} />\n    </BlockUi>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(Send);\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, Route, useHistory } from 'react-router-dom';\nimport PinWrap from './PinWrap';\n\nimport { InputWrap } from './common';\nimport { cleanMnemonics, isMnemonicsValid, countWords, getPassword } from '../utils';\n\nconst Import = () => {\n  const { t, i18n } = useTranslation();\n  const history = useHistory();\n  const $ = window.jQuery;\n  const importMnemonics = () => {\n    window.pinType = 'import';\n\n    var account = $('#account').val();\n    var mnemonics = $('#mnemonics').val();\n\n    if ($.trim(account) === '') {\n      $('#formInfoMessage').hide();\n      $('#errorOnImport').show().find('span').text('Invalid account.');\n      return;\n    }\n\n    if ($.trim(mnemonics) === '') {\n      $('#formInfoMessage').hide();\n      $('#errorOnImport').show().find('span').text('Mnemonics is not valid.');\n      return;\n    }\n\n    if (countWords($.trim(mnemonics)) !== 12 && countWords($.trim(mnemonics)) !== 16 && countWords($.trim(mnemonics)) !== 24) {\n      $('#formInfoMessage').hide();\n      $('#errorOnImport').show().find('span').text('Mnemonics is not valid.');\n      // TODO: Check validation of mnemonics\n      return;\n    }\n\n    if (!isMnemonicsValid(mnemonics)) {\n      $('#formInfoMessage').hide();\n      $('#errorOnImport').show().find('span').text('Invalid mnemonics checksum error.');\n      // TODO: Check validation of mnemonics\n      return;\n    }\n\n    if (window.option === 'disablechecksum') {\n      $('#mnemonics').val(mnemonics);\n    } else {\n      $('#mnemonics').val(cleanMnemonics(mnemonics));\n    }\n\n    $('.pin-wrap').addClass('open');\n  };\n\n  const submitForm = (checksum = true) => {\n    var account = $.trim($('#hidden-account').val());\n    var mnemonics = $.trim($('#mnemonics').val());\n\n    if (account === '') {\n      $('#formInfoMessage').hide();\n      $('#errorOnImport').show().find('span').text('Invalid account.');\n      return;\n    }\n\n    if (mnemonics === '') {\n      $('#formInfoMessage').hide();\n      $('#errorOnImport').show().find('span').text('Invalid mnemonics.');\n      return;\n    }\n\n    // Check encrypted mnemonic phrase and pasted value\n    if (document.getElementById('encrypted-import').innerText !== getPassword()) {\n      $('.notification-modal').text('Encrypted mnemonic phrase does not match.');\n      $('.notification-modal').show();\n      setTimeout(function () {\n        $('.notification-modal').hide();\n      }, 2000);\n      return;\n    }\n\n    history.push(`/${i18n.language}/session`);\n  };\n\n  const copyAddress = () => {\n    const copyText = document.getElementById('encrypted-import-for-copy');\n    copyText.select();\n    localStorage.setItem('password', copyText.value);\n    document.execCommand('copy');\n    $('.notification-modal').text('Encrypted mnemonic phrase is copied.');\n    $('.notification-modal').show();\n    setTimeout(function () {\n      $('.notification-modal').hide();\n    }, 2000);\n  };\n\n  return (\n    <div>\n      <h2>Import Wallet</h2>\n      {/* 1. Account Name, Mnemonics */}\n      <form id=\"import-form1\" className=\"keystation-form\" noValidate>\n        <InputWrap label=\"Wallet Name\">\n          <input className=\"input__field input__field--fumi input-account\" id=\"account\" type=\"text\" />\n        </InputWrap>\n\n        <InputWrap label=\"Mnemonics\">\n          <textarea className=\"input__field input__field--fumi input-mnemonics\" id=\"mnemonics\" defaultValue={''} />\n        </InputWrap>\n\n        <p id=\"formInfoMessage\" className=\"information-text\">\n          <i className=\"fa fa-fw fa-question-circle\" /> Enter 12 / 16 / 24 words including spaces. Mnemonic phrase is encrypted and stored in Keychain.\n        </p>\n        <p id=\"errorOnImport\" className=\"error\">\n          {/* error msg */}\n          <i className=\"fa fa-fw fa-exclamation-circle\" /> <span />\n        </p>\n        <button className=\"button\" type=\"button\" onClick={importMnemonics}>\n          Next\n        </button>\n      </form>\n      {/* 1 END */}\n      {/* 2. pin ( pin-wrap.open )*/}\n      <PinWrap pinType=\"import\" />\n\n      {/* 2 end */}\n      {/* 3. re-enter */}\n      <div className=\"notification-modal\">{/* Encrypted mnemonic phrase is copied. */}</div>\n      <form id=\"import-form2\" method=\"GET\" className=\"keystation-form re-enter-form\" noValidate>\n        <p>Please copy and paste the mnemonic encryption below.</p>\n        <div className=\"pw-nnemonics\">\n          <div>\n            <span>\n              <i className=\"fa fa-lock\" />\n              Encrypted mnemonic phrase\n            </span>\n            <button type=\"button\" onClick={copyAddress}>\n              <i className=\"fa fa-files-o\" />\n              Copy\n            </button>\n          </div>\n          {/* <input class=\"input__field input__field--fumi input-account\" id=\"hidden-account\" type=\"text\" name=\"account\" style=\"display: none\" value=\"\"> */}\n          <span id=\"encrypted-import\">{/* encrypted string */}</span>\n        </div>\n\n        <InputWrap label=\"Encrypted mnemonic phrase\">\n          <input className=\"input__field input__field--fumi\" id=\"hidden-account\" type=\"text\" name=\"account\" style={{ display: 'none' }} defaultValue />\n          <input className=\"input__field input__field--fumi input-password\" type=\"password\" autoComplete=\"new-password\" />\n        </InputWrap>\n        <a href=\"https://medium.com/cosmostation/introducing-keystation-end-to-end-encrypted-key-manager-for-dapps-built-with-the-cosmos-sdk-37dac753feb5\" target=\"_blank\">\n          <i className=\"fa fa-fw fa-question-circle\" />\n          Why do I have to encrypt my mnemonic phrase?\n        </a>\n        <input type=\"text\" defaultValue id=\"encrypted-import-for-copy\" />\n        <button className=\"button\" type=\"button\" onClick={submitForm}>\n          Next\n        </button>\n      </form>\n      {/* 3 end */}\n      {/* 4. loader ( loader-wrap.open )*/}\n      <div className=\"loader-wrap\">\n        <div>\n          <div className=\"spinner spinner-blink\" />\n        </div>\n        <div>\n          <div className=\"spinner spinner-bounce-middle\" />\n        </div>\n      </div>\n      {/* 4 end */}\n      <Link to={`/${i18n.language}/signin`}>Sign In</Link>\n    </div>\n  );\n};\n\nexport default Import;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link, Route, useHistory } from 'react-router-dom';\nimport PinWrap from './PinWrap';\n\nimport { InputWrap } from './common';\nimport { cleanMnemonics, isMnemonicsValid, countWords, getPassword } from '../utils';\n\nconst ImportPrivateKey = () => {\n  const cosmos = window.cosmos;\n  const { t, i18n } = useTranslation();\n  const history = useHistory();\n  const $ = window.jQuery;\n  const importPrivateKey = () => {\n    window.pinType = 'import';\n\n    var account = $('#account').val();\n    var privatekey = $('#privatekey').val();\n\n    if ($.trim(account) === '') {\n      $('#formInfoMessage').hide();\n      $('#errorOnImport').show().find('span').text('Invalid account.');\n      return;\n    }\n\n    if ($.trim(privatekey) === '') {\n      $('#formInfoMessage').hide();\n      $('#errorOnImport').show().find('span').text('Private Key is not valid.');\n      return;\n    }\n\n    if ($.trim(privatekey).length !== 59 + cosmos.bech32MainPrefix.length) {\n      $('#formInfoMessage').hide();\n      $('#errorOnImport').show().find('span').text('Private Key is not valid.');\n      // TODO: Check validation of private key\n      return;\n    }\n\n    $('#privatekey').val(privatekey);\n\n    $('.pin-wrap').addClass('open');\n  };\n\n  const submitForm = () => {\n    var account = $.trim($('#hidden-account').val());\n    var privatekey = $.trim($('#privatekey').val());\n\n    if (account === '') {\n      $('#formInfoMessage').hide();\n      $('#errorOnImport').show().find('span').text('Invalid account.');\n      return;\n    }\n\n    if (privatekey === '') {\n      $('#formInfoMessage').hide();\n      $('#errorOnImport').show().find('span').text('Invalid privatekey.');\n      return;\n    }\n\n    // Check encrypted mnemonic phrase and pasted value\n    if (document.getElementById('encrypted-import').innerText !== getPassword()) {\n      $('.notification-modal').text('Encrypted mnemonic phrase does not match.');\n      $('.notification-modal').show();\n      setTimeout(function () {\n        $('.notification-modal').hide();\n      }, 2000);\n      return;\n    }\n\n    history.push(`/${i18n.language}/session`);\n  };\n\n  const copyAddress = () => {\n    const copyText = document.getElementById('encrypted-import-for-copy');\n    copyText.select();\n    localStorage.setItem('password', copyText.value);\n    document.execCommand('copy');\n    $('.notification-modal').text('Encrypted private key is copied.');\n    $('.notification-modal').show();\n    setTimeout(function () {\n      $('.notification-modal').hide();\n    }, 2000);\n  };\n\n  return (\n    <div>\n      <h2>Import Wallet</h2>\n      {/* 1. Account Name, Private Key */}\n      <form id=\"import-form1\" className=\"keystation-form\" noValidate>\n        <InputWrap label=\"Wallet Name\">\n          <input className=\"input__field input__field--fumi input-account\" id=\"account\" type=\"text\" />\n        </InputWrap>\n\n        <InputWrap label=\"Private Key\">\n          <input className=\"input__field input__field--fumi input-mnemonics\" id=\"privatekey\" type=\"text\" defaultValue={''} />\n        </InputWrap>\n\n        <p id=\"formInfoMessage\" className=\"information-text\">\n          <i className=\"fa fa-fw fa-question-circle\" /> Enter private key. Private key is encrypted and stored in Keychain.\n        </p>\n        <p id=\"errorOnImport\" className=\"error\">\n          {/* error msg */}\n          <i className=\"fa fa-fw fa-exclamation-circle\" /> <span />\n        </p>\n        <button className=\"button\" type=\"button\" onClick={importPrivateKey}>\n          Next\n        </button>\n      </form>\n      {/* 1 END */}\n      {/* 2. pin ( pin-wrap.open )*/}\n      <PinWrap pinType=\"import-privatekey\" />\n\n      {/* 2 end */}\n      {/* 3. re-enter */}\n      <div className=\"notification-modal\">{/* Encrypted private key phrase is copied. */}</div>\n      <form id=\"import-form2\" method=\"GET\" className=\"keystation-form re-enter-form\" noValidate>\n        <p>Please copy and paste the private key encryption below.</p>\n        <div className=\"pw-nnemonics\">\n          <div>\n            <span>\n              <i className=\"fa fa-lock\" />\n              Encrypted private key phrase\n            </span>\n            <button type=\"button\" onClick={copyAddress}>\n              <i className=\"fa fa-files-o\" />\n              Copy\n            </button>\n          </div>\n          {/* <input class=\"input__field input__field--fumi input-account\" id=\"hidden-account\" type=\"text\" name=\"account\" style=\"display: none\" value=\"\"> */}\n          <span id=\"encrypted-import\">{/* encrypted string */}</span>\n        </div>\n\n        <InputWrap label=\"Encrypted mnemonic phrase\">\n          <input className=\"input__field input__field--fumi\" id=\"hidden-account\" type=\"text\" name=\"account\" style={{ display: 'none' }} defaultValue />\n          <input className=\"input__field input__field--fumi input-password\" type=\"password\" autoComplete=\"new-password\" />\n        </InputWrap>\n        <a href=\"https://medium.com/cosmostation/introducing-keystation-end-to-end-encrypted-key-manager-for-dapps-built-with-the-cosmos-sdk-37dac753feb5\" target=\"_blank\">\n          <i className=\"fa fa-fw fa-question-circle\" />\n          Why do I have to encrypt my private key?\n        </a>\n        <input type=\"text\" defaultValue id=\"encrypted-import-for-copy\" />\n        <button className=\"button\" type=\"button\" onClick={submitForm}>\n          Next\n        </button>\n      </form>\n      {/* 3 end */}\n      {/* 4. loader ( loader-wrap.open )*/}\n      <div className=\"loader-wrap\">\n        <div>\n          <div className=\"spinner spinner-blink\" />\n        </div>\n        <div>\n          <div className=\"spinner spinner-bounce-middle\" />\n        </div>\n      </div>\n      {/* 4 end */}\n      <Link to={`/${i18n.language}/signin`}>Sign In</Link>\n    </div>\n  );\n};\n\nexport default ImportPrivateKey;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nconst Session = () => {\n  const { t, i18n } = useTranslation();\n  return (\n    <div>\n      <h2 id=\"session-page-title\">Save your Account to Keychain</h2>\n      <form className=\"keystation-form\">\n        <img src=\"img/keychain.png\" alt=\"\" width=\"100%\" />\n        <br />\n        <br />\n        <p>You MUST press \"Save\" in order to complete registration of your account. If this pop-up does not appear, please press the Key logo on the top right corner of your browser.</p>\n\n        <Link className=\"button\" to={`/${i18n.language}/transaction`}>\n          Connect\n        </Link>\n      </form>\n      <a href=\"https://support.google.com/chrome/answer/95606?co=GENIE.Platform%3DDesktop&hl=en\" target=\"_blank\">\n        How can I manage saved mnemonics?\n      </a>\n    </div>\n  );\n};\n\nexport default Session;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router';\n\nconst Home = () => {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <div className=\"menu\">\n      <Link to={`/${i18n.language}/contract/query`} className=\"button full\">\n        {t('interact')}\n      </Link>\n      <Link to={`/${i18n.language}/send`} className=\"button full\">\n        {t('send')}\n      </Link>\n      <Link to={`/${i18n.language}/provider/set`} className=\"button full\">\n        {t('interactScript')}\n      </Link>\n      <Link to={`/${i18n.language}/airequest/set`} className=\"button full\">\n        {t('interactRequest')}\n      </Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\n// import { useHistory } from 'react-router';\nimport PinWrap, { openPinWrap } from './PinWrap';\n\nconst Transaction = ({ user }) => {\n  const $ = window.jQuery;\n  const { t, i18n } = useTranslation();\n  // const history = useHistory();\n  // const cosmos = window.cosmos;\n\n  useEffect(() => {\n    if (window.stdSignMsgByPayload) {\n      const txBody = window.stdSignMsgByPayload;\n      $('#tx-json').html(JSON.stringify(txBody));\n    }\n  }, []);\n\n  const denyHandler = () => {\n    // clear, close if there is window.opener\n    if (window.opener) {\n      window.opener.postMessage('deny', '*');\n      window.close();\n    }\n  };\n\n  return (\n    <div>\n      <h2>Sign Transaction</h2>\n      <form className=\"keystation-form\">\n        <input style={{ display: 'none' }} type=\"text\" tabIndex={-1} spellCheck=\"false\" name=\"account\" defaultValue={user.name} />\n        <input style={{ display: 'none' }} type=\"password\" autoComplete=\"current-password\" tabIndex={-1} spellCheck=\"false\" />\n        <div className=\"keystation-tx-json\" id=\"tx-json\"></div>\n        <div className=\"tx-btn-wrap\">\n          <button className=\"button\" type=\"button\" className=\"cancel\" onClick={denyHandler}>\n            {t('deny')}\n          </button>\n          <button type=\"button\" onClick={openPinWrap} id=\"allowBtn\">\n            {t('allow')} <span></span>\n          </button>\n        </div>\n      </form>\n\n      <PinWrap show={false} pinType=\"tx\" />\n    </div>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps)(Transaction);\n","const constants = {\n    DATA_SOURCE: \"datasource\",\n    TEST_CASE: \"testcase\",\n    ORACLE_SCRIPT: \"oscript\"\n}\n\nexport default constants;","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nconst ProviderMenu = ({ selected }) => {\n    const { t, i18n } = useTranslation();\n    const providerMenu = [\n        {\n            path: 'set',\n            label: 'Set Provider Scripts'\n        },\n        {\n            path: 'edit',\n            label: 'Edit Provider Scripts'\n        }\n    ];\n\n    return (\n        <h2 className=\"contract-menu\">\n            {providerMenu.map((item) => {\n                if (item.path === selected) return <span key={item.path}>{item.label}</span>;\n                return (\n                    <Link key={item.path} to={`/${i18n.language}/provider/${item.path}`}>\n                        <button>{item.label}</button>\n                    </Link>\n                );\n            })}\n        </h2>\n    );\n};\n\nexport default ProviderMenu;\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport bech32 from 'bech32';\nimport constants from '../../constants';\nimport PinWrap, { openPinWrap } from '../PinWrap';\nimport ProviderMenu from './ProviderMenu';\nimport Cosmos from '@oraichain/cosmosjs';\nconst message = Cosmos.message;\n\nconst SetScript = ({ user, contract }) => {\n  const $ = window.jQuery;\n  const { t, i18n } = useTranslation();\n  const [blocking, setBlocking] = useState(false);\n  const [isOScript, setIsOScript] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const cosmos = window.cosmos;\n\n  const pattern = new RegExp(/[~`!#$%\\^&*+=\\-\\[\\]\\\\';/{}|\\\\\":<>\\?]/);\n\n  useEffect(() => {\n    console.log('contract: ', contract);\n    if (typeof contract === 'string') {\n      $('#contract').val(contract);\n    }\n  }, []);\n\n  const getTxBody = (childKey) => {\n    const name = $('#name').val().trim();\n    const description = $('#des').val().trim();\n    const contractAddress = $('#contract').val().trim();\n    const memo = $('#memo').val().trim();\n    const type = $('#type').val().trim();\n    if (pattern.test(name) || pattern.test(description) || pattern.test(contractAddress) || pattern.test(memo) || pattern.test(type)) {\n      alert('inputs has invalid values');\n      return;\n    }\n    let msgSend = '';\n    let msgSendAny = '';\n    let accAddress = bech32.fromWords(bech32.toWords(childKey.identifier));\n    if (type === constants.DATA_SOURCE) {\n      msgSend = new message.oraichain.orai.provider.MsgCreateAIDataSource({\n        name,\n        description,\n        contract: contractAddress,\n        owner: accAddress\n      });\n\n      msgSendAny = new message.google.protobuf.Any({\n        type_url: '/oraichain.orai.provider.MsgCreateAIDataSource',\n        value: message.oraichain.orai.provider.MsgCreateAIDataSource.encode(msgSend).finish()\n      });\n    } else if (type === constants.TEST_CASE) {\n      msgSend = new message.oraichain.orai.provider.MsgCreateTestCase({\n        name,\n        description,\n        contract: contractAddress,\n        owner: accAddress\n      });\n\n      msgSendAny = new message.google.protobuf.Any({\n        type_url: '/oraichain.orai.provider.MsgCreateTestCase',\n        value: message.oraichain.orai.provider.MsgCreateTestCase.encode(msgSend).finish()\n      });\n    } else if (type === constants.ORACLE_SCRIPT) {\n      const ds = $('#ds').val().trim();\n      const tc = $('#tc').val().trim();\n      console.log('data source: ', ds);\n      console.log('pattern: ', pattern.test(ds));\n      if (pattern.test(ds) || pattern.test(tc)) {\n        alert('input data sources or test cases has invalid values');\n        return;\n      }\n      const dsArr = ds.split(',');\n      const tcArr = tc.split(',');\n      msgSend = new message.oraichain.orai.provider.MsgCreateOracleScript({\n        name,\n        description,\n        contract: contractAddress,\n        owner: accAddress,\n        data_sources: dsArr,\n        test_cases: tcArr\n      });\n\n      msgSendAny = new message.google.protobuf.Any({\n        type_url: '/oraichain.orai.provider.MsgCreateOracleScript',\n        value: message.oraichain.orai.provider.MsgCreateOracleScript.encode(msgSend).finish()\n      });\n    } else {\n      console.log('error in choosing script type');\n    }\n\n    console.log('msg send: ', msgSend);\n\n    return new message.cosmos.tx.v1beta1.TxBody({\n      messages: [msgSendAny],\n      memo\n    });\n  };\n\n  const onChildKey = async (childKey) => {\n    try {\n      setBlocking(true);\n      // will allow return childKey from Pin\n      const txBody = getTxBody(childKey);\n      console.log('tx body: ', txBody);\n      // higher gas limit\n      const res = await cosmos.submit(childKey, txBody, 'BROADCAST_MODE_BLOCK');\n      $('#tx-json').text(res.tx_response.raw_log);\n      // check if the broadcast message is successful or not\n      try {\n        let log = JSON.parse(res.tx_response.raw_log);\n      } catch (err) {\n        // if error then we don't set success to hide the next button\n        return;\n      }\n\n      console.log('response: ', JSON.parse(res.tx_response.raw_log)[0]);\n      setIsSuccess(true);\n      alert('transaction broadcast successfully');\n    } catch (ex) {\n      alert(ex.message);\n    } finally {\n      setBlocking(false);\n    }\n  };\n\n  return (\n    <BlockUi tag=\"div\" blocking={blocking}>\n      <ProviderMenu selected=\"set\" />\n      <form className=\"keystation-form\">\n        <input style={{ display: 'none' }} type=\"text\" tabIndex={-1} spellCheck=\"false\" name=\"account\" defaultValue={user.name} />\n        <input style={{ display: 'none' }} type=\"password\" autoComplete=\"current-password\" tabIndex={-1} spellCheck=\"false\" />\n        <div className=\"keystation-tx-info\" id=\"tx-info\">\n          <h3 className=\"send\">Set</h3>\n          <span>{t('creator')}</span>\n          <p>{user.address} </p>\n          <div className=\"field\">\n            <span>{t('name')}</span>\n            <input id=\"name\" />\n          </div>\n          <div className=\"field\">\n            <span>{t('description')}</span>\n            <input id=\"des\" />\n          </div>\n\n          <div className=\"field\">\n            <span>{t('contract')}</span>\n            <input id=\"contract\" />\n          </div>\n          <span>{t('memo')}</span>\n          <textarea id=\"memo\"></textarea>\n          <label htmlFor=\"type\">Choose a script type to set:</label>\n          <select\n            name=\"contract type\"\n            id=\"type\"\n            onChange={() => {\n              const type = $('#type').val().trim();\n              console.log('type: ', type);\n              // to expose the Next button again to create new requests\n              if (isSuccess) {\n                setIsSuccess(false);\n              }\n              if (type === 'oscript') {\n                setIsOScript(true);\n              } else {\n                setIsOScript(false);\n              }\n            }}\n          >\n            <option value=\"datasource\">Data Source</option>\n            <option value=\"testcase\">Test Case</option>\n            <option value=\"oscript\">Oracle Script</option>\n          </select>\n          {isOScript ? (\n            <div>\n              <div className=\"field\">\n                <span>{t('dsources')}</span>\n                <input id=\"ds\" />\n              </div>\n              <div className=\"field\">\n                <span>{t('tcases')}</span>\n                <input id=\"tc\" />\n              </div>\n            </div>\n          ) : null}\n        </div>\n        {!isSuccess ? (\n          <div className=\"tx-btn-wrap btn-center\">\n            <button type=\"button\" onClick={openPinWrap} id=\"allowBtn\">\n              Submit\n            </button>\n          </div>\n        ) : null}\n      </form>\n\n      <div className=\"keystation-tx-json\" id=\"tx-json\"></div>\n\n      <PinWrap show={false} pinType=\"tx\" onChildKey={onChildKey} />\n    </BlockUi>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    contract: state.contract\n  };\n}\n\nexport default connect(mapStateToProps)(SetScript);\n","import React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport BlockUi from 'react-block-ui';\nimport 'react-block-ui/style.css';\nimport bech32 from 'bech32';\nimport constants from '../../constants';\nimport PinWrap, { openPinWrap } from '../PinWrap';\nimport ProviderMenu from './ProviderMenu';\nimport Cosmos from '@oraichain/cosmosjs';\nconst message = Cosmos.message;\n\nconst EditScript = ({ user, contract }) => {\n  const $ = window.jQuery;\n  const { t, i18n } = useTranslation();\n  const [blocking, setBlocking] = useState(false);\n  const [isOScript, setIsOScript] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [curName, setCurName] = useState('');\n  const [newName, setNewName] = useState('');\n  const [description, setDes] = useState('');\n  const [contractAddress, setAddress] = useState('');\n  const [type, setType] = useState('');\n  const [ds, setDs] = useState([]);\n  const [tc, setTc] = useState([]);\n  const cosmos = window.cosmos;\n\n  const pattern = new RegExp(/[~`!#$%\\^&*+=\\-\\[\\]\\\\';/{}|\\\\\":<>\\?]/);\n\n  useEffect(() => {\n    if (typeof contract === 'string') {\n      $('#contract').val(contract);\n    }\n  }, []);\n\n  const handleEdit = async () => {\n    const curName = $('#curName').val().trim();\n    const newName = $('#newName').val().trim();\n    const description = $('#des').val().trim();\n    const contractAddress = $('#contract').val().trim();\n    const memo = $('#memo').val().trim();\n    const type = $('#type').val().trim();\n    if (pattern.test(curName) || pattern.test(newName) || pattern.test(description) || pattern.test(contractAddress) || pattern.test(memo) || pattern.test(type)) {\n      alert('inputs has invalid values');\n      return;\n    }\n    try {\n      const data = await fetch(`${cosmos.url}/provider/${type}/${curName}`).then((res) => res.json());\n      console.log('data: ', data);\n      if (data.code !== undefined) {\n        alert('current name of the script is not found');\n        return;\n      } else {\n        setCurName(curName);\n        setNewName(newName === '' ? curName : newName);\n        setDes(description === '' ? data.description : description);\n        setAddress(contractAddress === '' ? data.contract : contractAddress);\n        setType(type);\n        if (type === constants.ORACLE_SCRIPT) {\n          const ds = $('#ds').val().trim();\n          const tc = $('#tc').val().trim();\n          if (pattern.test(ds) || pattern.test(tc)) {\n            alert('inputs has invalid values');\n            return;\n          }\n          setDs(ds === '' ? data.d_sources : ds.split(','));\n          setTc(tc === '' ? data.t_cases : tc.split(','));\n        }\n        openPinWrap();\n      }\n    } catch (err) {\n      alert('unexpected error from the server: ', err);\n      return;\n    }\n  };\n\n  const getTxBody = (childKey) => {\n    let msgSend = '';\n    let msgSendAny = '';\n    let accAddress = bech32.fromWords(bech32.toWords(childKey.identifier));\n    if (type === constants.DATA_SOURCE) {\n      msgSend = new message.oraichain.orai.provider.MsgEditAIDataSource({\n        old_name: curName,\n        new_name: newName,\n        description: description,\n        contract: contractAddress,\n        owner: accAddress\n      });\n\n      msgSendAny = new message.google.protobuf.Any({\n        type_url: '/oraichain.orai.provider.MsgEditAIDataSource',\n        value: message.oraichain.orai.provider.MsgEditAIDataSource.encode(msgSend).finish()\n      });\n    } else if (type === constants.TEST_CASE) {\n      msgSend = new message.oraichain.orai.provider.MsgEditTestCase({\n        old_name: curName,\n        new_name: newName,\n        description: description,\n        contract: contractAddress,\n        owner: accAddress\n      });\n\n      msgSendAny = new message.google.protobuf.Any({\n        type_url: '/oraichain.orai.provider.MsgEditTestCase',\n        value: message.oraichain.orai.provider.MsgEditTestCase.encode(msgSend).finish()\n      });\n    } else if (type === constants.ORACLE_SCRIPT) {\n      msgSend = new message.oraichain.orai.provider.MsgEditOracleScript({\n        old_name: curName,\n        new_name: newName,\n        description: description,\n        contract: contractAddress,\n        owner: accAddress,\n        data_sources: ds,\n        test_cases: tc\n      });\n\n      msgSendAny = new message.google.protobuf.Any({\n        type_url: '/oraichain.orai.provider.MsgEditOracleScript',\n        value: message.oraichain.orai.provider.MsgEditOracleScript.encode(msgSend).finish()\n      });\n    } else {\n      console.log('error in choosing script type');\n    }\n\n    console.log('msg send: ', msgSend);\n\n    return new message.cosmos.tx.v1beta1.TxBody({\n      messages: [msgSendAny],\n      memo: $('#memo').val().trim()\n    });\n  };\n\n  const onChildKey = async (childKey) => {\n    try {\n      setBlocking(true);\n      // will allow return childKey from Pin\n      const txBody = getTxBody(childKey);\n      console.log('tx body: ', txBody);\n      // higher gas limit\n      const res = await cosmos.submit(childKey, txBody, 'BROADCAST_MODE_BLOCK');\n      $('#tx-json').text(res.tx_response.raw_log);\n      // check if the broadcast message is successful or not\n      try {\n        let log = JSON.parse(res.tx_response.raw_log);\n      } catch (err) {\n        // if error then we don't set success to hide the next button\n        return;\n      }\n\n      console.log('response: ', JSON.parse(res.tx_response.raw_log)[0]);\n      setIsSuccess(true);\n      alert('transaction broadcast successfully');\n    } catch (ex) {\n      alert(ex.message);\n    } finally {\n      setBlocking(false);\n    }\n  };\n\n  return (\n    <BlockUi tag=\"div\" blocking={blocking}>\n      <ProviderMenu selected=\"edit\" />\n      <form className=\"keystation-form\">\n        <input style={{ display: 'none' }} type=\"text\" tabIndex={-1} spellCheck=\"false\" name=\"account\" defaultValue={user.name} />\n        <input style={{ display: 'none' }} type=\"password\" autoComplete=\"current-password\" tabIndex={-1} spellCheck=\"false\" />\n        <div className=\"keystation-tx-info\" id=\"tx-info\">\n          <h3 className=\"send\">Edit</h3>\n          <span>{t('creator')}</span>\n          <p>{user.address} </p>\n          <div className=\"field\">\n            <span>{t('curName')}</span>\n            <input id=\"curName\" />\n          </div>\n          <div className=\"field\">\n            <span>{t('newName')}</span>\n            <input id=\"newName\" />\n          </div>\n          <div className=\"field\">\n            <span>{t('editDescription')}</span>\n            <input id=\"des\" />\n          </div>\n\n          <div className=\"field\">\n            <span>{t('editContract')}</span>\n            <input id=\"contract\" />\n          </div>\n          <span>{t('memo')}</span>\n          <textarea id=\"memo\"></textarea>\n          <label htmlFor=\"type\">Choose a script type to set:</label>\n          <select\n            name=\"contract type\"\n            id=\"type\"\n            onChange={() => {\n              const type = $('#type').val().trim();\n              console.log('type: ', type);\n              // to expose the Next button again to create new requests\n              if (isSuccess) {\n                setIsSuccess(false);\n              }\n              if (type === 'oscript') {\n                setIsOScript(true);\n              } else {\n                setIsOScript(false);\n              }\n            }}\n          >\n            <option value=\"datasource\">Data Source</option>\n            <option value=\"testcase\">Test Case</option>\n            <option value=\"oscript\">Oracle Script</option>\n          </select>\n          {isOScript ? (\n            <div>\n              <div className=\"field\">\n                <span>{t('dsources')}</span>\n                <input id=\"ds\" />\n              </div>\n              <div className=\"field\">\n                <span>{t('tcases')}</span>\n                <input id=\"tc\" />\n              </div>\n            </div>\n          ) : null}\n        </div>\n        {!isSuccess ? (\n          <div className=\"tx-btn-wrap btn-center\">\n            <button type=\"button\" onClick={handleEdit} id=\"allowBtn\">\n              Submit\n            </button>\n          </div>\n        ) : null}\n      </form>\n\n      <div className=\"keystation-tx-json\" id=\"tx-json\"></div>\n\n      <PinWrap show={false} pinType=\"tx\" onChildKey={onChildKey} />\n    </BlockUi>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n    contract: state.contract\n  };\n}\n\nexport default connect(mapStateToProps)(EditScript);\n","export const networks = {\n  Oraichain: {\n    denom: 'orai',\n    lcd: process.env.REACT_APP_LCD || 'http://localhost:1317'\n  },\n  cosmos: {\n    denom: 'atom',\n    lcd: 'https://lcd-cosmos-app.cosmostation.io'\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport { Route, Redirect, Switch, useLocation, useRouteMatch, useHistory } from 'react-router';\nimport { pathToRegexp, compile } from 'path-to-regexp';\nimport { useTranslation } from 'react-i18next';\nimport Select from 'react-select';\nimport { Link } from 'react-router-dom';\nimport getUnicodeFlagIcon from 'country-flag-icons/unicode';\nimport { connect } from 'react-redux';\nimport * as actions from './actions';\nimport SignIn from './components/SignIn';\nimport Send from './components/Send';\nimport Import from './components/Import';\nimport ImportPrivateKey from './components/ImportPrivateKey';\nimport Session from './components/Session';\nimport Home from './components/Home';\nimport Transaction from './components/Transaction';\nimport ContractQuery from './components/contract/Query';\nimport ContractExecute from './components/contract/Execute';\nimport ContractDeploy from './components/contract/Deploy';\nimport ScriptSet from './components/provider/SetScript';\nimport ScriptEdit from './components/provider/EditScript';\nimport RequestSet from './components/airequest/SetRequest';\nimport RequestGet from './components/airequest/GetRequest';\nimport Cosmos from '@oraichain/cosmosjs';\nimport { networks } from './config';\nimport { customStyles } from './utils';\n\nimport './App.css';\n\nconst url = new window.URL(window.location.href);\nconst network = url.searchParams.get('payload') || window.localStorage.getItem('wallet.network') || 'Oraichain';\nconst path = url.searchParams.get('path');\nconst lcd = url.searchParams.get('lcd') || (networks[network]?.lcd ?? 'http://localhost:1317');\n// init cosmos version\nconst cosmos = new Cosmos(lcd, network);\nconst symbol = networks[network]?.denom ?? 'orai';\ncosmos.setBech32MainPrefix(symbol);\nif (path && path !== 'undefined') {\n  cosmos.setPath(path);\n}\n\n// global params\nwindow.cosmos = cosmos;\nwindow.localStorage.setItem('wallet.network', network);\nconst $ = window.jQuery;\n\n// there is post message from parent window, just update the stdSignMsgByPayload and ready for broadcast\nwindow.addEventListener(\n  'message',\n  (e) => {\n    // not the client to send message\n    if (e.data.tx) {\n      const txBody = e.data.tx;\n      window.stdSignMsgByPayload = txBody;\n      $('#tx-json').html(JSON.stringify(txBody));\n    } else if (e.data.file) {\n      // console.log(e.data.file);\n      $('#filename').trigger('file', e.data.file);\n    }\n  },\n  false\n);\n\n// trigger when document ready\n$(() => {\n  // send ready signal\n  window.opener?.postMessage('ready', '*');\n});\n\nconst generateLanguage = (locale, location) => {\n  const ROUTE = '/:locale/:path*';\n  const definePath = compile(ROUTE);\n  const routeComponents = pathToRegexp(ROUTE).exec(location.pathname);\n\n  let subPaths = null;\n  if (routeComponents && routeComponents[2]) {\n    subPaths = routeComponents[2].split('/');\n  }\n\n  return definePath({\n    locale,\n    path: subPaths\n  });\n};\n\nconst options = Object.keys(networks).map((value) => ({\n  value: value,\n  label: value\n}));\n\nconst PrivateRoute = ({ component: Component, isLoggedIn, ...rest }) => {\n  return <Route {...rest} render={(props) => (isLoggedIn ? <Component {...props} /> : <Redirect to={{ pathname: '/signin', state: { from: props.location } }} />)} />;\n};\n\nconst App = ({ user, updateUser }) => {\n  const location = useLocation();\n  const history = useHistory();\n  const match = useRouteMatch();\n  const { locale } = match.params;\n  const { t, i18n } = useTranslation();\n  const [selectedOption, setSelectedOption] = useState({ value: network, label: network });\n  const isLoggedIn = !!user;\n\n  const changeNetwork = (option) => {\n    setSelectedOption(option);\n    cosmos.url = networks[option.value].lcd;\n    cosmos.chainId = option.value;\n    window.localStorage.setItem('wallet.network', option.value);\n  };\n\n  const changeLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n  };\n\n  if (i18n.options.resources[locale]) {\n    console.log('match params: ', match);\n    if (i18n.language !== locale) {\n      changeLanguage(locale);\n    }\n  } else {\n    window.location.href = `/${i18n.options.fallbackLng}${location.pathname}`;\n  }\n\n  return (\n    <>\n      <div className=\"inner\">\n        <div className=\"header\">\n          <h1>\n            <Link to={`${match.url}`}>\n              <img src=\"/img/full-logo-dark.png\" alt=\"Home\" width={145} />\n            </Link>\n          </h1>\n          <Select styles={customStyles} defaultValue={selectedOption} onChange={changeNetwork} options={options} className=\"select\" />\n        </div>\n        <div className=\"keystation-url-info\">\n          <strong>\n            <i className=\"fa fa-fw fa-lock\" />\n            {cosmos.chainId}\n          </strong>\n          {t('usingSecureConnection')}\n        </div>\n\n        <Switch>\n          <Route path={`${match.url}/signin`} component={SignIn} />\n          <Route path={`${match.url}/import`} component={Import} />\n          <Route path={`${match.url}/import-privatekey`} component={ImportPrivateKey} />\n          <PrivateRoute exact isLoggedIn={isLoggedIn} path={`${match.url}/`} component={Home} />\n          <PrivateRoute isLoggedIn={isLoggedIn} path={`${match.url}/contract/query`} component={ContractQuery} />\n          <PrivateRoute isLoggedIn={isLoggedIn} path={`${match.url}/contract/execute`} component={ContractExecute} />\n          <PrivateRoute isLoggedIn={isLoggedIn} path={`${match.url}/contract/deploy`} component={ContractDeploy} />\n          <PrivateRoute isLoggedIn={isLoggedIn} path={`${match.url}/provider/set`} component={ScriptSet} />\n          <PrivateRoute isLoggedIn={isLoggedIn} path={`${match.url}/provider/edit`} component={ScriptEdit} />\n          <PrivateRoute isLoggedIn={isLoggedIn} path={`${match.url}/airequest/set`} component={RequestSet} />\n          <PrivateRoute isLoggedIn={isLoggedIn} path={`${match.url}/airequest/get`} component={RequestGet} />\n          <PrivateRoute isLoggedIn={isLoggedIn} path={`${match.url}/send`} component={Send} />\n          <PrivateRoute isLoggedIn={isLoggedIn} path={`${match.url}/transaction`} component={Transaction} />\n          <PrivateRoute isLoggedIn={isLoggedIn} path={`${match.url}/session`} component={Session} />\n          {isLoggedIn ? null : <Redirect from=\"*\" to=\"/signin\" />}\n        </Switch>\n      </div>\n      <div className=\"footer\">\n        <div>\n          <Link to={generateLanguage('vn', location)}>\n            <button onClick={() => changeLanguage('vn')}>{getUnicodeFlagIcon('VN')}</button>\n          </Link>\n\n          <Link to={generateLanguage('en', location)}>\n            <button onClick={() => changeLanguage('en')}>{getUnicodeFlagIcon('US')}</button>\n          </Link>\n        </div>\n\n        {user && !location.pathname?.match(/\\/(?:signin|import)\\b/) && (\n          <button onClick={() => updateUser(null)}>\n            Logout <i className=\"fa fa-sign-out\" />\n          </button>\n        )}\n\n        <a href=\"https://github.com/oraichain/cosmosjs.git\" target=\"_blank\">\n          <button>\n            <i className=\"fa fa-fw fa-github\" />\n          </button>\n        </a>\n      </div>\n    </>\n  );\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { Route, Switch } from 'react-router';\nimport { Redirect } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport configureStore, { history } from './configureStore';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './i18n';\nimport App from './App';\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = configureStore();\n\nconst render = (Component) =>\n  ReactDOM.render(\n    <I18nextProvider i18n={i18n}>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <Switch>\n            <Route path=\"/:locale\" component={Component} />\n            <Redirect to=\"/en\" />\n          </Switch>\n        </ConnectedRouter>\n      </Provider>\n    </I18nextProvider>,\n    document.getElementById('app')\n  );\n\nrender(App);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\n\nconst ContractMenu = ({ selected }) => {\n  const { t, i18n } = useTranslation();\n  const contractMenu = [\n    {\n      path: 'query',\n      label: 'Query'\n    },\n    {\n      path: 'execute',\n      label: 'Execute'\n    },\n    {\n      path: 'deploy',\n      label: 'Deploy'\n    }\n  ];\n\n  return (\n    <h2 className=\"contract-menu\">\n      {contractMenu.map((item) => {\n        if (item.path === selected) return <span key={item.path}>{item.label}</span>;\n        return (\n          <Link key={item.path} to={`/${i18n.language}/contract/${item.path}`}>\n            <button>{item.label}</button>\n          </Link>\n        );\n      })}\n    </h2>\n  );\n};\n\nexport default ContractMenu;\n"],"sourceRoot":""}